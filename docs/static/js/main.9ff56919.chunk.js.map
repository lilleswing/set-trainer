{"version":3,"sources":["Card.js","App.js","serviceWorker.js","index.js"],"names":["Card","props","className","alt","src","img","onClick","ALL_CARDS","CATEGORIES","pickDifferent","category","v1","v2","i","length","myCat","deepCopy","o","JSON","parse","stringify","shuffle","array","temporaryValue","randomIndex","currentIndex","Math","floor","random","getOther","categories","curVal","chances","push","App","useState","Date","getTime","scoreboard","setScoreboard","updateRight","console","log","newScoreboard","timeElapsed","updateWrong","alert","randomCard","fname","key","answerFromArray","arr","retval","c1","c2","randomTwoCards","myCard1","myCard2","possibleAnswers","fname1","slice","fname2","vars1","split","vars2","answer","piece","answerCard","closeCards","allAnswers","thisAnswer","j","cards","myCard","getCloseAnswers","queryCard1","queryCard2","decoys","d","tableCards","decoyCard","Object","keys","values","removeDuplicates","concat","getOtherCards","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.9ff56919.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Card(props) {\n    return (\n        <div className={\"card\"}>\n            <img className={\"card\"} alt=\"\" src={props.img} onClick={props.onClick}/>\n        </div>\n    )\n}\n\nexport default Card;","import React, {useState} from 'react';\nimport './App.css';\nimport Card from \"./Card\";\n\nlet ALL_CARDS = [\n    \"green-double-outline-capsule.jpg\",\n    \"green-double-outline-diamond.jpg\",\n    \"green-double-outline-squiggle.jpg\",\n    \"green-double-solid-capsule.jpg\",\n    \"green-double-solid-diamond.jpg\",\n    \"green-double-solid-squiggle.jpg\",\n    \"green-double-stripes-capsule.jpg\",\n    \"green-double-stripes-diamond.jpg\",\n    \"green-double-stripes-squiggle.jpg\",\n    \"green-single-outline-capsule.jpg\",\n    \"green-single-outline-diamond.jpg\",\n    \"green-single-outline-squiggle.jpg\",\n    \"green-single-solid-capsule.jpg\",\n    \"green-single-solid-diamond.jpg\",\n    \"green-single-solid-squiggle.jpg\",\n    \"green-single-stripes-capsule.jpg\",\n    \"green-single-stripes-diamond.jpg\",\n    \"green-single-stripes-squiggle.jpg\",\n    \"green-triple-outline-capsule.jpg\",\n    \"green-triple-outline-diamond.jpg\",\n    \"green-triple-outline-squiggle.jpg\",\n    \"green-triple-solid-capsule.jpg\",\n    \"green-triple-solid-diamond.jpg\",\n    \"green-triple-solid-squiggle.jpg\",\n    \"green-triple-stripes-capsule.jpg\",\n    \"green-triple-stripes-diamond.jpg\",\n    \"green-triple-stripes-squiggle.jpg\",\n    \"purple-double-outline-capsule.jpg\",\n    \"purple-double-outline-diamond.jpg\",\n    \"purple-double-outline-squiggle.jpg\",\n    \"purple-double-solid-capsule.jpg\",\n    \"purple-double-solid-diamond.jpg\",\n    \"purple-double-solid-squiggle.jpg\",\n    \"purple-double-stripes-capsule.jpg\",\n    \"purple-double-stripes-diamond.jpg\",\n    \"purple-double-stripes-squiggle.jpg\",\n    \"purple-single-outline-capsule.jpg\",\n    \"purple-single-outline-diamond.jpg\",\n    \"purple-single-outline-squiggle.jpg\",\n    \"purple-single-solid-capsule.jpg\",\n    \"purple-single-solid-diamond.jpg\",\n    \"purple-single-solid-squiggle.jpg\",\n    \"purple-single-stripes-capsule.jpg\",\n    \"purple-single-stripes-diamond.jpg\",\n    \"purple-single-stripes-squiggle.jpg\",\n    \"purple-triple-outline-capsule.jpg\",\n    \"purple-triple-outline-diamond.jpg\",\n    \"purple-triple-outline-squiggle.jpg\",\n    \"purple-triple-solid-capsule.jpg\",\n    \"purple-triple-solid-diamond.jpg\",\n    \"purple-triple-solid-squiggle.jpg\",\n    \"purple-triple-stripes-capsule.jpg\",\n    \"purple-triple-stripes-diamond.jpg\",\n    \"purple-triple-stripes-squiggle.jpg\",\n    \"red-double-outline-capsule.jpg\",\n    \"red-double-outline-diamond.jpg\",\n    \"red-double-outline-squiggle.jpg\",\n    \"red-double-solid-capsule.jpg\",\n    \"red-double-solid-diamond.jpg\",\n    \"red-double-solid-squiggle.jpg\",\n    \"red-double-stripes-capsule.jpg\",\n    \"red-double-stripes-diamond.jpg\",\n    \"red-double-stripes-squiggle.jpg\",\n    \"red-single-outline-capsule.jpg\",\n    \"red-single-outline-diamond.jpg\",\n    \"red-single-outline-squiggle.jpg\",\n    \"red-single-solid-capsule.jpg\",\n    \"red-single-solid-diamond.jpg\",\n    \"red-single-solid-squiggle.jpg\",\n    \"red-single-stripes-capsule.jpg\",\n    \"red-single-stripes-diamond.jpg\",\n    \"red-single-stripes-squiggle.jpg\",\n    \"red-triple-outline-capsule.jpg\",\n    \"red-triple-outline-diamond.jpg\",\n    \"red-triple-outline-squiggle.jpg\",\n    \"red-triple-solid-capsule.jpg\",\n    \"red-triple-solid-diamond.jpg\",\n    \"red-triple-solid-squiggle.jpg\",\n    \"red-triple-stripes-capsule.jpg\",\n    \"red-triple-stripes-diamond.jpg\",\n    \"red-triple-stripes-squiggle.jpg\"\n];\nlet CATEGORIES = [\n    ['red', 'green', 'purple'],\n    ['single', 'double', 'triple'],\n    ['solid', 'stripes', 'outline'],\n    ['diamond', 'squiggle', 'capsule']\n];\n\nfunction pickDifferent(category, v1, v2) {\n    for (let i = 0; i < category.length; i++) {\n        let myCat = category[i];\n        if (myCat !== v1 && myCat !== v2) {\n            return myCat\n        }\n    }\n}\n\nfunction deepCopy(o) {\n    return JSON.parse(JSON.stringify(o))\n}\n\nlet shuffle = function (array) {\n\n    var currentIndex = array.length;\n    var temporaryValue, randomIndex;\n\n    // While there remain elements to shuffle...\n    while (0 !== currentIndex) {\n        // Pick a remaining element...\n        randomIndex = Math.floor(Math.random() * currentIndex);\n        currentIndex -= 1;\n\n        // And swap it with the current element.\n        temporaryValue = array[currentIndex];\n        array[currentIndex] = array[randomIndex];\n        array[randomIndex] = temporaryValue;\n    }\n\n    return array;\n};\n\nfunction getOther(categories, curVal) {\n    let chances = []\n    for (let i = 0; i < categories.length; i++) {\n        if (categories[i] !== curVal) {\n            chances.push(categories[i])\n        }\n    }\n    chances = shuffle(chances);\n    return chances[0]\n}\n\nfunction App() {\n    const [scoreboard, setScoreboard] = useState({\n        \"correct\": 0,\n        \"wrong\": 0,\n        \"startTime\": new Date().getTime() / 1000,\n        \"solveTime\": -1,\n    });\n    let updateRight = function () {\n        console.log(\"LOLOLOL\");\n        let newScoreboard = deepCopy(scoreboard);\n        newScoreboard['correct'] = newScoreboard['correct'] + 1;\n        if (newScoreboard['correct'] === 1) {\n            newScoreboard[\"startTime\"] = new Date().getTime() / 1000;\n        }\n        if (newScoreboard['correct'] === 20) {\n            let now = new Date().getTime() / 1000;\n            let timeElapsed = now - newScoreboard['startTime'];\n            newScoreboard['solveTime'] = timeElapsed;\n        }\n        setScoreboard(newScoreboard);\n    };\n\n    let updateWrong = function () {\n        let newScoreboard = deepCopy(scoreboard);\n        alert(\"DWIGHT YOU IGNORANT SLUT\");\n        newScoreboard['wrong'] = newScoreboard['wrong'] + 1;\n        setScoreboard(newScoreboard);\n    };\n\n    function randomCard() {\n        const i = Math.floor(Math.random() * ALL_CARDS.length);\n        return <Card img={\"labeled/\" + ALL_CARDS[i]}\n                     fname={ALL_CARDS[i]}\n                     key={Math.random() + ALL_CARDS[i]}\n                     onClick={updateWrong}/>\n    }\n\n    function answerFromArray(arr) {\n        let retval = \"\";\n        for (let i = 0; i < arr.length; i++) {\n            if (i !== 0) {\n                retval += \"-\";\n            }\n            retval += arr[i];\n        }\n        retval += \".jpg\";\n        return retval;\n    }\n\n    function getCloseAnswers(arr) {\n        let allAnswers = [];\n        for (let i = 0; i < arr.length; i++) {\n            let thisAnswer = [];\n            for (let j = 0; j < arr.length; j++) {\n                if (i !== j) {\n                    thisAnswer.push(arr[j]);\n                } else {\n                    let curVal = arr[j];\n                    let piece = getOther(CATEGORIES[i], curVal);\n                    thisAnswer.push(piece);\n                }\n            }\n            allAnswers.push(thisAnswer);\n        }\n        let cards = [];\n        for (let i = 0; i < allAnswers.length; i++) {\n            let myCard = <Card img={\"labeled/\" + answerFromArray(allAnswers[i])}\n                               fname={answerFromArray(allAnswers[i])}\n                               onClick={updateWrong}\n                               key={Math.random() + answerFromArray(allAnswers[i])}/>;\n            cards.push(myCard);\n        }\n        return cards;\n    }\n\n    function removeDuplicates(queryCard1, queryCard2, answer, decoys) {\n        let d = {};\n        let tableCards = {};\n        for (const card of [queryCard1, queryCard2, answer]) {\n            tableCards[card.props.fname] = true;\n        }\n        decoys = shuffle(decoys);\n        d[answer.props.fname] = answer;\n        for (const decoyCard of decoys) {\n            if (Object.keys(d).length >= 6) {\n                continue\n            }\n            tableCards[decoyCard.props.fname] = true;\n            d[decoyCard.props.fname] = decoyCard;\n        }\n        while (Object.keys(d).length < 6) {\n            let decoyCard = randomCard();\n            if (decoyCard.props.fname in tableCards) {\n                continue\n            }\n            tableCards[decoyCard.props.fname] = true;\n            d[decoyCard.props.fname] = decoyCard;\n        }\n        return shuffle(Object.values(d));\n    }\n\n    function randomTwoCards() {\n        let c1 = randomCard();\n        let c2 = randomCard();\n        while (c1.props.fname === c2.props.fname) {\n            c2 = randomCard();\n        }\n        return [c1, c2];\n    }\n\n\n    function getOtherCards(c1, c2) {\n        let fname1 = c1.props.fname.slice(0, -4);\n        let fname2 = c2.props.fname.slice(0, -4);\n        let vars1 = fname1.split('-');\n        let vars2 = fname2.split('-');\n\n        let answer = [];\n        for (let i = 0; i < 4; i++) {\n            if (vars1[i] === vars2[i]) {\n                answer.push(vars1[i]);\n                continue\n            }\n            let piece = pickDifferent(CATEGORIES[i], vars1[i], vars2[i]);\n            answer.push(piece);\n        }\n        console.log(answer);\n        let answerCard = <Card img={\"labeled/\" + answerFromArray(answer)}\n                               fname={answerFromArray(answer)}\n                               onClick={updateRight}\n                               key={Math.random() + \"correctAnswer\"}/>;\n        let closeCards = getCloseAnswers(answer);\n        closeCards = closeCards.concat([randomCard(), randomCard(), randomCard()]);\n        return removeDuplicates(c1, c2, answerCard, closeCards);\n    }\n\n    const [myCard1, myCard2] = randomTwoCards();\n    const possibleAnswers = getOtherCards(myCard1, myCard2);\n\n    return (\n        <div className=\"App\">\n            <div className=\"board\">\n                <div className='rowC'>\n                    {myCard1}\n                    {myCard2}\n                    <div className={\"scoreBoard\"}>\n                        <h1 className={\"hr\"}> Race To 20! </h1>\n                        <h5>Match The Top Two Cards</h5>\n                        <p>\n                            Correct: {scoreboard['correct']}\n                            <br></br>\n                            Wrong: {scoreboard['wrong']}\n                            {scoreboard['solveTime'] !== -1 &&\n                            <h1>Total Time: {scoreboard['solveTime']}</h1>\n                            }\n                        </p>\n                    </div>\n                </div>\n                <div className='rowC'>\n                    {possibleAnswers[0]}\n                    {possibleAnswers[1]}\n                    {possibleAnswers[2]}\n                </div>\n                <div className='rowC'>\n                    {possibleAnswers[3]}\n                    {possibleAnswers[4]}\n                    {possibleAnswers[5]}\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}